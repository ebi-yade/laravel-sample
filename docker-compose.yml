version: "3.7"

x-environment: &app
  build:
    dockerfile: docker/php/Dockerfile
    context: .
  working_dir: "/app"
  environment:
    DB_CONNECTION: mysql
    DB_HOST: mysql
    CACHE_DRIVER: redis
    QUEUE_CONNECTION: redis
    SESSION_DRIVER: redis
    REDIS_HOST: redis
    DB_DATABASE: book_sample
    DB_USERNAME: book_sample_user
    DB_PASSWORD: book_12345
  volumes:
    - "./src:/app:cached"
    - "./docs:/app/docs"
    - ./docker/php/php.ini:/usr/local/etc/php/php.ini
  tty: true

services:
  app:
    <<: *app
    depends_on:
      - mysql
    ports:
      - "8080:8080"

  nginx:
    image: nginx:1.17.8-alpine
    volumes:
      - "./docker/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./src/public:/app/public"
    ports:
      - "80:80"
    depends_on:
      - app
    tty: true

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: book_sample
      MYSQL_USER: book_sample_user
      MYSQL_PASSWORD: book_12345
    ports:
      - "3306:3306"
    volumes:
      - "mysql_store:/var/lib/mysql"
      - "./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf"
      - "./docs:/docs"
      # Create testing DB
      - "./docker/mysql/init/create-testing-db.sql:/docker-entrypoint-initdb.d/create-testing-db.sql"

  redis:
    image: redis:5.0.7-alpine
    ports:
      - "6379:6379"
    volumes:
      - "redis_store:/data"
    tty: true

volumes:
  mysql_store:
  redis_store:
